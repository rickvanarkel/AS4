import warnings
warnings.filterwarnings('ignore')
import networkx as nx
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

'''
Er kunnen zowel analyses gedaan worden op de NetworkX als op de dataframe
Voor nu zit er alleen een basisbestand in voor de analyse per road, en per road segment
'''

analysis_link = './data/traffic_network_compact_LB.csv'
analysis_df = pd.read_csv(analysis_link)

vulnerability_columns = ['road', 'road segment', 'lrp', 'Truck number', 'Truck percentage']
vulnerability_columns2 = ['road segment', 'condition', 'bridge_length'] # Nu per road segment gekeken, kan op dezelfde manier met road

vulnerability_df = analysis_df.loc[:, vulnerability_columns2]

expanded_df = pd.get_dummies(vulnerability_df['condition'], prefix='condition')
vulnerability_df = pd.concat([vulnerability_df, expanded_df], axis=1)
vulnerability_df = vulnerability_df.drop('condition', axis=1)

print(vulnerability_df)

vulnerability_df_grouped = vulnerability_df.groupby('road segment').sum()
vulnerability_df_grouped = vulnerability_df_grouped.reset_index()

print(vulnerability_df_grouped)

'''
Het expanden van de condition naar condition_A e.d. kan ook eerder gedaan worden, waardoor het nog meekan als weight in networkx?

Als een metric bijv. bridge length/total road part length is, neem dan ook 'lenght' mee! Kan door traffic_network_LB te 
gebruiken ipv compact 

Wat plaatjes en sorteer dingen doen! 

En nog wat met networkX?
'''