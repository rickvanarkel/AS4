import warnings
warnings.filterwarnings('ignore')
import networkx as nx
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#create dataframe from data
analysis_link = './data/traffic_network_compact_LB.csv'
analysis_df = pd.read_csv(analysis_link)

#select columns which need to be analysed
vulnerability_columns = ['road segment', 'bridge_length', 'condition_A', 'condition_B', 'condition_C', 'condition_D']

#create dataframe with column list specified above
vulnerability_df = analysis_df.loc[:, vulnerability_columns]

# Define the conditions for multiplying the bridge length
conditions = [
    vulnerability_df['bridge_length'] < 10,
    (vulnerability_df['bridge_length'] >= 10) & (vulnerability_df['bridge_length'] <= 50),
    (vulnerability_df['bridge_length'] > 50) & (vulnerability_df['bridge_length'] <= 200),
    vulnerability_df['bridge_length'] > 200
]

# Define the corresponding multipliers for each condition
multipliers = [15, 37.5, 67.5, 150]

# Use numpy's select function to apply the conditions and multipliers to create the 'vulnerability' column
vulnerability_df['vulnerability'] = np.select(conditions, multipliers, default=0)

# Multiply the 'vulnerability' column by a value that is connected to the bridge condition (increases by a factor 2 each 'condition level')
vulnerability_df['vulnerability'] = vulnerability_df['vulnerability'] * vulnerability_df['condition_A'] + 2*vulnerability_df['condition_B'] \
                                        + 4*vulnerability_df['condition_C'] + 8*vulnerability_df['condition_D']

#create a new dataframe to look at road segments as a whole
vulnerability_df_grouped = vulnerability_df.groupby('road segment').sum()
vulnerability_df_grouped = vulnerability_df_grouped.reset_index()

#sort values for results
pd.set_option('display.max_columns', None)
print(vulnerability_df_grouped.sort_values('vulnerability', ascending=False))
print(vulnerability_df_grouped.sort_values('vulnerability', ascending=False).head(10))
